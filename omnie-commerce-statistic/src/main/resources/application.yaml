#
# [ Server Configuration Attributes ]
#
server:
 port: 9070
 contextPath: /api

#
# [ Spring Database Configuration]
#
spring:
  application:
    name: omnie-statistic
  jackson:
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
  output:
    ansi:
      enabled: always
  data:
    mongodb:
      repositories:
        enabled: true
      database: omnie-commerce-statistic
      grid-fs-database: omnie-commerce-statistic-fs
      uri: mongodb://localhost:27017

#
# [ Spring Email Configuration]
#

  mail:
    host: smtp.gmail.com
    port: 587
    username: omniehp2@gmail.com
    password: omniuser2hp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

#
# [ Security Configuration Attributes ]
#
security:
  basic:
    enabled: false
  oauth2:
    client:
      clientId: web-client
      clientSecret: secret
      accessTokenUri: http://localhost:9999/omnie-security/api/oauth/check_token
      userAuthorizationUri: http://localhost:9999/omnie-security/api/oauth/authorize
    resource:
      filter-order: 3
      jwt:
        keyUri: http://localhost:9999/omnie-security/api/oauth/token_key

#
# [ Logging Configuration Attributes ]
#

logging:
  level:
#    root: info
    com.omniesoft: debug
    org.springframework: info
    org.springframework.security: debug
    org.springframework.cache: debug
    org.hibernate: info
    jdbc: info
    org.apache: info
    jdbc.audit: warn
    jdbc.sqlonly: warn
    jdbc.resultset: warn
    jdbc.sqltiming: warn


#
# [ Eureka]
#
eureka:
  client:
    serviceUrl:
      defaultZone: http://${service.discovery.client.user}:${service.discovery.client.password}@${service.discovery.host}:9998/eureka/
    healthcheck:
      enabled: true
# Custom
service:
  discovery:
    host: localhost
    client:
      user: eureka-client
      password: EuReKaPasSs



---
###
### Profile: dev
###
spring:
    profiles: dev
    datasource:
      url: jdbc:postgresql://db:5432/omnie_commerce
    data:
      mongodb:
        uri: mongodb://mongo:27017

#
# [ Security Configuration Attributes ]
#
security:
  oauth2:
    client:
      clientId: web-client
      clientSecret: secret
      accessTokenUri: http://omnie-gateway:9999/omnie-security/api/oauth/check_token
      userAuthorizationUri: http://omnie-gateway:9999/omnie-security/api/oauth/authorize
    resource:
      filter-order: 3
      jwt:
        keyUri: http://omnie-gateway:9999/omnie-security/api/oauth/token_key


#
# [ Logging Configuration Attributes ]
#

logging:
  config: classpath:logger-to-file.xml

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    securePortEnabled: false
    prefer-ip-address: true

service:
  discovery:
    host: omnie-discovery
    client:
      user: eureka-client
      password: EuReKaPasSs

---
###
### Profile: dev-clone1
###
spring:
    profiles: dev-clone1
    datasource:
      url: jdbc:postgresql://db:5432/omnie_commerce
    data:
      mongodb:
        uri: mongodb://mongo:27017

server:
  port: 9071
#
# [ Security Configuration Attributes ]
#
security:
  oauth2:
    client:
      clientId: web-client
      clientSecret: secret
      accessTokenUri: http://omnie-gateway:9999/omnie-security/api/oauth/check_token
      userAuthorizationUri: http://omnie-gateway:9999/omnie-security/api/oauth/authorize
    resource:
      filter-order: 3
      jwt:
        keyUri: http://omnie-gateway:9999/omnie-security/api/oauth/token_key


#
# [ Logging Configuration Attributes ]
#

logging:
  config: classpath:logger-to-file.xml

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    securePortEnabled: false
    prefer-ip-address: true

service:
  discovery:
    host: omnie-discovery
    client:
      user: eureka-client
      password: EuReKaPasSs