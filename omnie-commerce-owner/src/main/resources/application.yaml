
#
# [ Server Configuration Attributes ]
#
server:
 port: 9050
 context-path: /api

application:
  host: http://dev.omniecom.com
  port: 9999

#
# [ Spring Database Configuration]
#
spring:
  application:
    name: omnie-owner
  jpa:
    generate-ddl: false
    show-sql: true
    database: postgresql
    hibernate:
      ddl-auto: none
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        format_sql: true
  datasource:
    platform: POSTGRESQL
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/omnie_commerce
    username: postgres
    password: password
  jackson:
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
  output:
    ansi:
      enabled: always


#
# [ Spring Email Configuration]
#
  mail:
    host: smtp.gmail.com
    port: 587
    username: omniehp2@gmail.com
    password: omniuser2hp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

#
# [ Security Configuration Attributes ]
#
security:
  basic:
    enabled: false
  oauth2:
    client:
      clientId: web-client
      clientSecret: secret
      accessTokenUri: http://localhost:9999/omnie-security/api/oauth/check_token
      userAuthorizationUri: http://localhost:9999/omnie-security/api/oauth/authorize
    resource:
      filter-order: 3
      jwt:
        keyUri: http://localhost:9999/omnie-security/api/oauth/token_key

#
# [ Logging Configuration Attributes ]
#
log4jdbc:
  trim:
    sql: false
  dump:
    sql:
      maxlinelength: 90
      select: true
logging:
  level:
    root: info
    com.omniesoft: info
    org.springframework: info
    org.hibernate: info
    org.apache: info

#
# [ Rest Templates ]
#
communication:
  services:
    token-service:
      api:
        baseUrl: http://localhost:9999/omnie-security/api/oauth/token
    image-service:
      api:
        baseUrl: http://localhost:9999/omnie-imagestorage/api
    statistic-service:
      api:
        baseUrl: http://localhost:9999/omnie-statistic/api
    notification-service:
      api:
        baseUrl: http://localhost:9999/omnie-notification/api


#
# [ Eureka]
#
eureka:
  client:
    serviceUrl:
      defaultZone: http://${service.discovery.client.user}:${service.discovery.client.password}@${service.discovery.host}:9998/eureka/
    healthcheck:
      enabled: false
# Custom
service:
  discovery:
    host: localhost
    client:
      user: eureka-client
      password: EuReKaPasSs



---
###
### Profile: dev
###
spring:
    profiles: dev
    datasource:
      url: jdbc:postgresql://db:5432/omnie_commerce

#
# [ Security Configuration Attributes ]
#
security:
  oauth2:
    client:
      clientId: web-client
      clientSecret: secret
      accessTokenUri: http://omnie-gateway:9999/omnie-security/api/oauth/check_token
      userAuthorizationUri: http://omnie-gateway:9999/omnie-security/api/oauth/authorize
    resource:
      filter-order: 3
      jwt:
        keyUri: http://omnie-gateway:9999/omnie-security/api/oauth/token_key

#
# [ Logging Configuration Attributes ]
#
log4jdbc:
  trim:
    sql: false
  dump:
    sql:
      maxlinelength: 120
      select: true
logging:
  config: classpath:log-config/dev.xml


#
# [ Rest Templates ]
#
communication:
  services:
    token-service:
      api:
        baseUrl: http://omnie-gateway:9999/omnie-security/api/oauth/token
    image-service:
      api:
        baseUrl: http://omnie-gateway:9999/omnie-imagestorage/api
    statistic-service:
      api:
        baseUrl: http://omnie-gateway:9999/omnie-statistic/api
    notification-service:
      api:
        baseUrl: http://omnie-gateway:9999/omnie-notification/api

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    securePortEnabled: false
    prefer-ip-address: true
  client:
    healthcheck:
      enabled: true

service:
  discovery:
    host: omnie-discovery
    client:
      user: eureka-client
      password: EuReKaPasSs
---
###
### Profile: prod
###
application:
  host: http://omniecom.com
  port: 19999

spring:
    profiles: prod
    datasource:
      url: jdbc:postgresql://postgres:5432/omnie_commerce

#
# [ Security Configuration Attributes ]
#
security:
  oauth2:
    client:
      clientId: web-client
      clientSecret: secret
      accessTokenUri: http://omnie-gateway:9999/omnie-security/api/oauth/check_token
      userAuthorizationUri: http://omnie-gateway:9999/omnie-security/api/oauth/authorize
    resource:
      filter-order: 3
      jwt:
        keyUri: http://omnie-gateway:9999/omnie-security/api/oauth/token_key

#
# [ Logging Configuration Attributes ]
#
logging:
  config: classpath:log-config/prod.xml


#
# [ Rest Templates ]
#
communication:
  services:
    token-service:
      api:
        baseUrl: http://omnie-gateway:9999/omnie-security/api/oauth/token
    image-service:
      api:
        baseUrl: http://omnie-gateway:9999/omnie-imagestorage/api
    statistic-service:
      api:
        baseUrl: http://omnie-gateway:9999/omnie-statistic/api
    notification-service:
      api:
        baseUrl: http://omnie-gateway:9999/omnie-notification/api

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    securePortEnabled: false
    prefer-ip-address: true
  client:
    healthcheck:
      enabled: true

service:
  discovery:
    host: omnie-discovery
    client:
      user: eureka-client
      password: EuReKaPasSs


---
###
### Profile: prod-local
###
application:
  host: http://omniecom.com
  port: 0

spring:
  profiles: prod-local
  datasource:
    url: jdbc:postgresql://localhost:5432/omnie_commerce_prod

#
# [ Security Configuration Attributes ]
#

server:
  port: 19050

security:
  oauth2:
    client:
      clientId: web-client
      clientSecret: secret
      accessTokenUri: http://omnie-gateway:19999/omnie-security/api/oauth/check_token
      userAuthorizationUri: http://omnie-gateway:19999/omnie-security/api/oauth/authorize
    resource:
      filter-order: 3
      jwt:
        keyUri: http://omnie-gateway:19999/omnie-security/api/oauth/token_key

#
# [ Logging Configuration Attributes ]
#
logging:
  config: classpath:log-config/prod.xml


#
# [ Rest Templates ]
#
communication:
  services:
    token-service:
      api:
        baseUrl: http://omnie-gateway:19999/omnie-security/api/oauth/token
    image-service:
      api:
        baseUrl: http://omnie-gateway:19999/omnie-imagestorage/api
    statistic-service:
      api:
        baseUrl: http://omnie-gateway:19999/omnie-statistic/api
    notification-service:
      api:
        baseUrl: http://omnie-gateway:19999/omnie-notification/api

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    securePortEnabled: false
    prefer-ip-address: true
  client:
    healthcheck:
      enabled: true

service:
  discovery:
    host: omnie-discovery
    client:
      user: eureka-client
      password: EuReKaPasSs